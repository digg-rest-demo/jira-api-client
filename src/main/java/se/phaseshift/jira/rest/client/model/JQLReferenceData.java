/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT-d2bbf99a611e8c219fc0b1362289195366130541
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package se.phaseshift.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import se.phaseshift.jira.rest.client.model.FieldReferenceData;
import se.phaseshift.jira.rest.client.model.FunctionReferenceData;
/**
 * Lists of JQL reference data.
 */
@Schema(description = "Lists of JQL reference data.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-04-17T13:21:14.321931+02:00[Europe/Stockholm]")

public class JQLReferenceData {
  @SerializedName("jqlReservedWords")
  private List<String> jqlReservedWords = null;

  @SerializedName("visibleFieldNames")
  private List<FieldReferenceData> visibleFieldNames = null;

  @SerializedName("visibleFunctionNames")
  private List<FunctionReferenceData> visibleFunctionNames = null;

  public JQLReferenceData jqlReservedWords(List<String> jqlReservedWords) {
    this.jqlReservedWords = jqlReservedWords;
    return this;
  }

  public JQLReferenceData addJqlReservedWordsItem(String jqlReservedWordsItem) {
    if (this.jqlReservedWords == null) {
      this.jqlReservedWords = new ArrayList<String>();
    }
    this.jqlReservedWords.add(jqlReservedWordsItem);
    return this;
  }

   /**
   * List of JQL query reserved words.
   * @return jqlReservedWords
  **/
  @Schema(description = "List of JQL query reserved words.")
  public List<String> getJqlReservedWords() {
    return jqlReservedWords;
  }

  public void setJqlReservedWords(List<String> jqlReservedWords) {
    this.jqlReservedWords = jqlReservedWords;
  }

  public JQLReferenceData visibleFieldNames(List<FieldReferenceData> visibleFieldNames) {
    this.visibleFieldNames = visibleFieldNames;
    return this;
  }

  public JQLReferenceData addVisibleFieldNamesItem(FieldReferenceData visibleFieldNamesItem) {
    if (this.visibleFieldNames == null) {
      this.visibleFieldNames = new ArrayList<FieldReferenceData>();
    }
    this.visibleFieldNames.add(visibleFieldNamesItem);
    return this;
  }

   /**
   * List of fields usable in JQL queries.
   * @return visibleFieldNames
  **/
  @Schema(description = "List of fields usable in JQL queries.")
  public List<FieldReferenceData> getVisibleFieldNames() {
    return visibleFieldNames;
  }

  public void setVisibleFieldNames(List<FieldReferenceData> visibleFieldNames) {
    this.visibleFieldNames = visibleFieldNames;
  }

  public JQLReferenceData visibleFunctionNames(List<FunctionReferenceData> visibleFunctionNames) {
    this.visibleFunctionNames = visibleFunctionNames;
    return this;
  }

  public JQLReferenceData addVisibleFunctionNamesItem(FunctionReferenceData visibleFunctionNamesItem) {
    if (this.visibleFunctionNames == null) {
      this.visibleFunctionNames = new ArrayList<FunctionReferenceData>();
    }
    this.visibleFunctionNames.add(visibleFunctionNamesItem);
    return this;
  }

   /**
   * List of functions usable in JQL queries.
   * @return visibleFunctionNames
  **/
  @Schema(description = "List of functions usable in JQL queries.")
  public List<FunctionReferenceData> getVisibleFunctionNames() {
    return visibleFunctionNames;
  }

  public void setVisibleFunctionNames(List<FunctionReferenceData> visibleFunctionNames) {
    this.visibleFunctionNames = visibleFunctionNames;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JQLReferenceData jqLReferenceData = (JQLReferenceData) o;
    return Objects.equals(this.jqlReservedWords, jqLReferenceData.jqlReservedWords) &&
        Objects.equals(this.visibleFieldNames, jqLReferenceData.visibleFieldNames) &&
        Objects.equals(this.visibleFunctionNames, jqLReferenceData.visibleFunctionNames);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jqlReservedWords, visibleFieldNames, visibleFunctionNames);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JQLReferenceData {\n");
    
    sb.append("    jqlReservedWords: ").append(toIndentedString(jqlReservedWords)).append("\n");
    sb.append("    visibleFieldNames: ").append(toIndentedString(visibleFieldNames)).append("\n");
    sb.append("    visibleFunctionNames: ").append(toIndentedString(visibleFunctionNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
