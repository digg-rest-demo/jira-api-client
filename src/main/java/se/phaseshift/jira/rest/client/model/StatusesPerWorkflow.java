/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT-d2bbf99a611e8c219fc0b1362289195366130541
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package se.phaseshift.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * The statuses associated with each workflow.
 */
@Schema(description = "The statuses associated with each workflow.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-04-17T13:21:14.321931+02:00[Europe/Stockholm]")

public class StatusesPerWorkflow {
  @SerializedName("initialStatusId")
  private String initialStatusId = null;

  @SerializedName("statuses")
  private List<String> statuses = null;

  @SerializedName("workflowId")
  private String workflowId = null;

  public StatusesPerWorkflow initialStatusId(String initialStatusId) {
    this.initialStatusId = initialStatusId;
    return this;
  }

   /**
   * The ID of the initial status for the workflow.
   * @return initialStatusId
  **/
  @Schema(description = "The ID of the initial status for the workflow.")
  public String getInitialStatusId() {
    return initialStatusId;
  }

  public void setInitialStatusId(String initialStatusId) {
    this.initialStatusId = initialStatusId;
  }

  public StatusesPerWorkflow statuses(List<String> statuses) {
    this.statuses = statuses;
    return this;
  }

  public StatusesPerWorkflow addStatusesItem(String statusesItem) {
    if (this.statuses == null) {
      this.statuses = new ArrayList<String>();
    }
    this.statuses.add(statusesItem);
    return this;
  }

   /**
   * The status IDs associated with the workflow.
   * @return statuses
  **/
  @Schema(description = "The status IDs associated with the workflow.")
  public List<String> getStatuses() {
    return statuses;
  }

  public void setStatuses(List<String> statuses) {
    this.statuses = statuses;
  }

  public StatusesPerWorkflow workflowId(String workflowId) {
    this.workflowId = workflowId;
    return this;
  }

   /**
   * The ID of the workflow.
   * @return workflowId
  **/
  @Schema(description = "The ID of the workflow.")
  public String getWorkflowId() {
    return workflowId;
  }

  public void setWorkflowId(String workflowId) {
    this.workflowId = workflowId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatusesPerWorkflow statusesPerWorkflow = (StatusesPerWorkflow) o;
    return Objects.equals(this.initialStatusId, statusesPerWorkflow.initialStatusId) &&
        Objects.equals(this.statuses, statusesPerWorkflow.statuses) &&
        Objects.equals(this.workflowId, statusesPerWorkflow.workflowId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(initialStatusId, statuses, workflowId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatusesPerWorkflow {\n");
    
    sb.append("    initialStatusId: ").append(toIndentedString(initialStatusId)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
