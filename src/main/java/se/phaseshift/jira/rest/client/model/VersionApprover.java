/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT-d2bbf99a611e8c219fc0b1362289195366130541
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package se.phaseshift.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
/**
 * Contains details about a version approver.
 */
@Schema(description = "Contains details about a version approver.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-04-17T13:21:14.321931+02:00[Europe/Stockholm]")

public class VersionApprover extends HashMap<String, Object> {
  @SerializedName("accountId")
  private String accountId = null;

  @SerializedName("declineReason")
  private String declineReason = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("status")
  private String status = null;

   /**
   * The Atlassian account ID of the approver.
   * @return accountId
  **/
  @Schema(description = "The Atlassian account ID of the approver.")
  public String getAccountId() {
    return accountId;
  }

   /**
   * A description of why the user is declining the approval.
   * @return declineReason
  **/
  @Schema(description = "A description of why the user is declining the approval.")
  public String getDeclineReason() {
    return declineReason;
  }

   /**
   * A description of what the user is approving within the specified version.
   * @return description
  **/
  @Schema(description = "A description of what the user is approving within the specified version.")
  public String getDescription() {
    return description;
  }

   /**
   * The status of the approval, which can be *PENDING*, *APPROVED*, or *DECLINED*
   * @return status
  **/
  @Schema(description = "The status of the approval, which can be *PENDING*, *APPROVED*, or *DECLINED*")
  public String getStatus() {
    return status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionApprover versionApprover = (VersionApprover) o;
    return Objects.equals(this.accountId, versionApprover.accountId) &&
        Objects.equals(this.declineReason, versionApprover.declineReason) &&
        Objects.equals(this.description, versionApprover.description) &&
        Objects.equals(this.status, versionApprover.status) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, declineReason, description, status, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionApprover {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    declineReason: ").append(toIndentedString(declineReason)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
