/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * OpenAPI spec version: 1001.0.0-SNAPSHOT-d2bbf99a611e8c219fc0b1362289195366130541
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package se.phaseshift.jira.rest.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Associated related work to a version
 */
@Schema(description = "Associated related work to a version")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-04-17T13:21:14.321931+02:00[Europe/Stockholm]")

public class VersionRelatedWork {
  @SerializedName("category")
  private String category = null;

  @SerializedName("issueId")
  private Long issueId = null;

  @SerializedName("relatedWorkId")
  private String relatedWorkId = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("url")
  private String url = null;

  public VersionRelatedWork category(String category) {
    this.category = category;
    return this;
  }

   /**
   * The category of the related work
   * @return category
  **/
  @Schema(required = true, description = "The category of the related work")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

   /**
   * The ID of the issue associated with the related work (if there is one). Cannot be updated via the Rest API.
   * @return issueId
  **/
  @Schema(description = "The ID of the issue associated with the related work (if there is one). Cannot be updated via the Rest API.")
  public Long getIssueId() {
    return issueId;
  }

   /**
   * The id of the related work. For the native release note related work item, this will be null, and Rest API does not support updating it.
   * @return relatedWorkId
  **/
  @Schema(description = "The id of the related work. For the native release note related work item, this will be null, and Rest API does not support updating it.")
  public String getRelatedWorkId() {
    return relatedWorkId;
  }

  public VersionRelatedWork title(String title) {
    this.title = title;
    return this;
  }

   /**
   * The title of the related work
   * @return title
  **/
  @Schema(description = "The title of the related work")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public VersionRelatedWork url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The URL of the related work. Will be null for the native release note related work item, but is otherwise required.
   * @return url
  **/
  @Schema(description = "The URL of the related work. Will be null for the native release note related work item, but is otherwise required.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionRelatedWork versionRelatedWork = (VersionRelatedWork) o;
    return Objects.equals(this.category, versionRelatedWork.category) &&
        Objects.equals(this.issueId, versionRelatedWork.issueId) &&
        Objects.equals(this.relatedWorkId, versionRelatedWork.relatedWorkId) &&
        Objects.equals(this.title, versionRelatedWork.title) &&
        Objects.equals(this.url, versionRelatedWork.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, issueId, relatedWorkId, title, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionRelatedWork {\n");
    
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    issueId: ").append(toIndentedString(issueId)).append("\n");
    sb.append("    relatedWorkId: ").append(toIndentedString(relatedWorkId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
